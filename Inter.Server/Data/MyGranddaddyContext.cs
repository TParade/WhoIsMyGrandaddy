// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Inter.Server.Data;

public partial class MyGranddaddyContext : DbContext
{
    public MyGranddaddyContext()
    {
    }

    public MyGranddaddyContext(DbContextOptions<MyGranddaddyContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Person> Person { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-5A2I53S\\EXCLR8;Initial Catalog=MyGranddaddy;Integrated Security=True;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Person>(entity =>
        {
            entity.ToTable("Person", "Site");

            entity.Property(e => e.BirthDate).HasColumnType("date");
            entity.Property(e => e.IdentityNumber)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Surname)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Father).WithMany(p => p.InverseFather)
                .HasForeignKey(d => d.FatherId)
                .HasConstraintName("FK_Person_Person_Father");

            entity.HasOne(d => d.Mother).WithMany(p => p.InverseMother)
                .HasForeignKey(d => d.MotherId)
                .HasConstraintName("FK_Person_Person_Mother");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}